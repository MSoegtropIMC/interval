FILES = \
	Interval_bigint_carrier.v \
	Interval_bisect.v \
	Interval_definitions.v \
	Interval_float_sig.v \
	Interval_generic_ops.v \
	Interval_generic_proof.v \
	Interval_generic.v \
	Interval_interval.v \
	Interval_interval_float.v \
	Interval_interval_float_full.v \
	Interval_missing.v \
	Interval_specific_ops.v \
	Interval_specific_sig.v \
	Interval_stdz_carrier.v \
	Interval_tactic.v \
	Interval_taylor_model.v \
	Interval_transcend.v \
	Interval_univariate.v \
	Interval_xreal.v \
	Interval_xreal_derive.v

CAFILES = \
	basic_rec.v \
	coeff_inst.v \
	derive_compl.v \
	interval_compl.v \
	nary_tuple.v \
	poly_bound.v \
	poly_bound_quad.v \
	poly_datatypes.v \
	poly_inst_seq.v \
	rpa_inst.v \
	Rstruct.v \
	seq_compl.v \
	taylor_model_int_sharp.v \
	taylor_model_float_sharp.v \
	taylor_poly.v \
	taylor_thm.v \
	xreal_ssr_compat.v

OBJS = $(addprefix src/,$(addsuffix o,$(FILES)))
CAOBJS = $(addprefix src/coqapprox/,$(addsuffix o,$(CAFILES)))

.PHONY: all check clean dist install

all: $(OBJS) $(CAOBJS)

clean: src/clean testsuite/clean

check: testsuite/check

Remakefile: Remakefile.in config.status
	./config.status Remakefile

configure config.status: configure.in
	autoconf
	./config.status --recheck

%.vo: %.v
	@COQDEP@ -R src Interval $< | @REMAKE@ -r $@
	@COQC@ -R src Interval $<

src/clean:
	rm -f $(OBJS) $(CAOBJS) src/*.glob src/coqapprox/*.glob

testsuite/check: src/Interval_tactic.vo
	set +e
	cd testsuite
	logfile="failures-`date '+%Y-%m-%d'`.log"
	cat /dev/null > log.tmp
	cat /dev/null > "$logfile"
	for f in *.v; do
	  cp "$f" check_tmp.v
	  @COQC@ -R ../src Interval check_tmp.v > output.tmp 2>&1
	  return_code=$?
	  if [ ${return_code} -ne 0 ]; then
	    (echo "*** $f exited with error code ${return_code}"; cat output.tmp; echo) >> "$logfile"
	    echo "$f exited with error code ${return_code}" >> log.tmp
	  fi
	  rm -f check_tmp.v check_tmp.vo check_tmp.glob output.tmp
	done
	return_code=0
	if [ -s log.tmp ]; then
	  echo "*** Failures:"
	  cat log.tmp
	  return_code=1
	else
	  rm "$logfile"
	fi
	rm log.tmp
	exit ${return_code}

testsuite/clean:
	rm -f testsuite/failures-*.log

install:
	prefix=@prefix@
	exec_prefix=@exec_prefix@
	mkdir -p @libdir@
	cp $(OBJS) @libdir@
	mkdir -p @libdir@/coqapprox
	cp $(CAOBJS) @libdir@/coqapprox

EXTRA_DIST = \
	configure

dist: $(EXTRA_DIST)
	PACK=@PACKAGE_TARNAME@-@PACKAGE_VERSION@
	DIRS=`git ls-tree -d -r --name-only HEAD`
	FILES=`git ls-tree -r --name-only HEAD`
	rm -rf $PACK.tar.gz $PACK
	mkdir $PACK
	for d in $DIRS; do mkdir $PACK/$d; done
	for f in $FILES $(EXTRA_DIST); do cp $f $PACK/$f; done
	git log --pretty="format:%ad %s" --date=short > $PACK/ChangeLog
	rm `find $PACK -name .gitignore`
	tar czf $PACK.tar.gz $PACK
	rm -rf $PACK
